var copy = function(char1,alies){
    // =======================================================
    var idselectNoLayers = stringIDToTypeID( "selectNoLayers" );
    var desc347 = new ActionDescriptor();
    var idnull = stringIDToTypeID( "null" );
    var ref58 = new ActionReference();
    var idlayer = stringIDToTypeID( "layer" );
    var idordinal = stringIDToTypeID( "ordinal" );
    var idtargetEnum = stringIDToTypeID( "targetEnum" );
    ref58.putEnumerated( idlayer, idordinal, idtargetEnum );
    desc347.putReference( idnull, ref58 );
    executeAction( idselectNoLayers, desc347, DialogModes.NO );

    // =======================================================
    var idselect = stringIDToTypeID( "select" );
    var desc348 = new ActionDescriptor();
    var idnull = stringIDToTypeID( "null" );
    var ref59 = new ActionReference();
    var idlayer = stringIDToTypeID( "layer" );
    ref59.putName( idlayer, "temp" );
    desc348.putReference( idnull, ref59 );
    var idmakeVisible = stringIDToTypeID( "makeVisible" );
    desc348.putBoolean( idmakeVisible, false );
    var idlayerID = stringIDToTypeID( "layerID" );
    var list88 = new ActionList();
    list88.putInteger( 7 );
    desc348.putList( idlayerID, list88 );
    executeAction( idselect, desc348, DialogModes.NO );

    // =======================================================
    var idset = stringIDToTypeID( "set" );
    var desc349 = new ActionDescriptor();
    var idnull = stringIDToTypeID( "null" );
    var ref60 = new ActionReference();
    var idtextLayer = stringIDToTypeID( "textLayer" );
    var idordinal = stringIDToTypeID( "ordinal" );
    var idtargetEnum = stringIDToTypeID( "targetEnum" );
    ref60.putEnumerated( idtextLayer, idordinal, idtargetEnum );
    desc349.putReference( idnull, ref60 );
    var idto = stringIDToTypeID( "to" );
    var desc350 = new ActionDescriptor();
    var idtextKey = stringIDToTypeID( "textKey" );
    desc350.putString( idtextKey, "5");
    var idwarp = stringIDToTypeID( "warp" );
    var desc351 = new ActionDescriptor();
    var idwarpStyle = stringIDToTypeID( "warpStyle" );
    var idwarpStyle = stringIDToTypeID( "warpStyle" );
    var idwarpNone = stringIDToTypeID( "warpNone" );
    desc351.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
    var idwarpValue = stringIDToTypeID( "warpValue" );
    desc351.putDouble( idwarpValue, 0.000000 );
    var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
    desc351.putDouble( idwarpPerspective, 0.000000 );
    var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
    desc351.putDouble( idwarpPerspectiveOther, 0.000000 );
    var idwarpRotate = stringIDToTypeID( "warpRotate" );
    var idorientation = stringIDToTypeID( "orientation" );
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc351.putEnumerated( idwarpRotate, idorientation, idhorizontal );
    var idwarp = stringIDToTypeID( "warp" );
    desc350.putObject( idwarp, idwarp, desc351 );
    var idtextGridding = stringIDToTypeID( "textGridding" );
    var idtextGridding = stringIDToTypeID( "textGridding" );
    var idnone = stringIDToTypeID( "none" );
    desc350.putEnumerated( idtextGridding, idtextGridding, idnone );
    var idorientation = stringIDToTypeID( "orientation" );
    var idorientation = stringIDToTypeID( "orientation" );
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc350.putEnumerated( idorientation, idorientation, idhorizontal );
    var idantiAlias = stringIDToTypeID( "antiAlias" );
    var idantiAliasType = stringIDToTypeID( "antiAliasType" );
    var idantiAliasSmooth = stringIDToTypeID( "antiAliasSmooth" );
    desc350.putEnumerated( idantiAlias, idantiAliasType, idantiAliasSmooth );
    var idbounds = stringIDToTypeID( "bounds" );
    var desc352 = new ActionDescriptor();
    var idleft = stringIDToTypeID( "left" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc352.putUnitDouble( idleft, idpointsUnit, 0.000000 );
    var idtop = stringIDToTypeID( "top" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc352.putUnitDouble( idtop, idpointsUnit, -204.929352 );
    var idright = stringIDToTypeID( "right" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc352.putUnitDouble( idright, idpointsUnit, 177.099197 );
    var idbottom = stringIDToTypeID( "bottom" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc352.putUnitDouble( idbottom, idpointsUnit, 37.948448 );
    var idbounds = stringIDToTypeID( "bounds" );
    desc350.putObject( idbounds, idbounds, desc352 );
    var idboundingBox = stringIDToTypeID( "boundingBox" );
    var desc353 = new ActionDescriptor();
    var idleft = stringIDToTypeID( "left" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc353.putUnitDouble( idleft, idpointsUnit, 29.600807 );
    var idtop = stringIDToTypeID( "top" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc353.putUnitDouble( idtop, idpointsUnit, -170.014893 );
    var idright = stringIDToTypeID( "right" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc353.putUnitDouble( idright, idpointsUnit, 151.799011 );
    var idbottom = stringIDToTypeID( "bottom" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc353.putUnitDouble( idbottom, idpointsUnit, 0.505997 );
    var idboundingBox = stringIDToTypeID( "boundingBox" );
    desc350.putObject( idboundingBox, idboundingBox, desc353 );
    var idtextShape = stringIDToTypeID( "textShape" );
    var list89 = new ActionList();
    var desc354 = new ActionDescriptor();
    var idchar = stringIDToTypeID( "char" );
    var idchar = stringIDToTypeID( "char" );
    var idpaint = stringIDToTypeID( "paint" );
    desc354.putEnumerated( idchar, idchar, idpaint );
    var idorientation = stringIDToTypeID( "orientation" );
    var idorientation = stringIDToTypeID( "orientation" );
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc354.putEnumerated( idorientation, idorientation, idhorizontal );
    var idtransform = stringIDToTypeID( "transform" );
    var desc355 = new ActionDescriptor();
    var idxx = stringIDToTypeID( "xx" );
    desc355.putDouble( idxx, 1.000000 );
    var idxy = stringIDToTypeID( "xy" );
    desc355.putDouble( idxy, 0.000000 );
    var idyx = stringIDToTypeID( "yx" );
    desc355.putDouble( idyx, 0.000000 );
    var idyy = stringIDToTypeID( "yy" );
    desc355.putDouble( idyy, 1.000000 );
    var idtx = stringIDToTypeID( "tx" );
    desc355.putDouble( idtx, 0.000000 );
    var idty = stringIDToTypeID( "ty" );
    desc355.putDouble( idty, 0.000000 );
    var idtransform = stringIDToTypeID( "transform" );
    desc354.putObject( idtransform, idtransform, desc355 );
    var idrowCount = stringIDToTypeID( "rowCount" );
    desc354.putInteger( idrowCount, 1 );
    var idcolumnCount = stringIDToTypeID( "columnCount" );
    desc354.putInteger( idcolumnCount, 1 );
    var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
    desc354.putBoolean( idrowMajorOrder, true );
    var idrowGutter = stringIDToTypeID( "rowGutter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc354.putUnitDouble( idrowGutter, idpointsUnit, 0.000000 );
    var idcolumnGutter = stringIDToTypeID( "columnGutter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc354.putUnitDouble( idcolumnGutter, idpointsUnit, 0.000000 );
    var idspacing = stringIDToTypeID( "spacing" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc354.putUnitDouble( idspacing, idpointsUnit, 0.000000 );
    var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
    var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
    var idalignByAscent = stringIDToTypeID( "alignByAscent" );
    desc354.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
    var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc354.putUnitDouble( idfirstBaselineMinimum, idpointsUnit, 0.000000 );
    var idbase = stringIDToTypeID( "base" );
    var desc356 = new ActionDescriptor();
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc356.putDouble( idhorizontal, 0.000000 );
    var idvertical = stringIDToTypeID( "vertical" );
    desc356.putDouble( idvertical, 0.000000 );
    var idpaint = stringIDToTypeID( "paint" );
    desc354.putObject( idbase, idpaint, desc356 );
    var idtextShape = stringIDToTypeID( "textShape" );
    list89.putObject( idtextShape, desc354 );
    desc350.putList( idtextShape, list89 );
    var idtextStyleRange = stringIDToTypeID( "textStyleRange" );
    var list90 = new ActionList();
    var desc357 = new ActionDescriptor();
    var idfrom = stringIDToTypeID( "from" );
    desc357.putInteger( idfrom, 0 );
    var idto = stringIDToTypeID( "to" );
    desc357.putInteger( idto, 2 );
    var idtextStyle = stringIDToTypeID( "textStyle" );
    var desc358 = new ActionDescriptor();
    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
    desc358.putBoolean( idstyleSheetHasParent, true );
    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
    desc358.putString( idfontPostScriptName, "DFWaWaSC-W5" );
    var idfontName = stringIDToTypeID( "fontName" );
    desc358.putString( idfontName, "Wawati SC" );
    var idfontStyleName = stringIDToTypeID( "fontStyleName" );
    desc358.putString( idfontStyleName, "Regular" );
    var idfontScript = stringIDToTypeID( "fontScript" );
    desc358.putInteger( idfontScript, 25 );
    var idfontTechnology = stringIDToTypeID( "fontTechnology" );
    desc358.putInteger( idfontTechnology, 2 );
    var idfontAvailable = stringIDToTypeID( "fontAvailable" );
    desc358.putBoolean( idfontAvailable, true );
    var idsize = stringIDToTypeID( "size" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( idsize, idpointsUnit, 252.999954 );
    var idimpliedFontSize = stringIDToTypeID( "impliedFontSize" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( idimpliedFontSize, idpointsUnit, 252.999954 );
    var idhorizontalScale = stringIDToTypeID( "horizontalScale" );
    desc358.putDouble( idhorizontalScale, 100.000000 );
    var idverticalScale = stringIDToTypeID( "verticalScale" );
    desc358.putDouble( idverticalScale, 100.000000 );
    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
    desc358.putBoolean( idsyntheticBold, false );
    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
    desc358.putBoolean( idsyntheticItalic, false );
    var idautoLeading = stringIDToTypeID( "autoLeading" );
    desc358.putBoolean( idautoLeading, true );
    var idtracking = stringIDToTypeID( "tracking" );
    desc358.putInteger( idtracking, 0 );
    var idbaselineShift = stringIDToTypeID( "baselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( idbaselineShift, idpointsUnit, 0.000000 );
    var idimpliedBaselineShift = stringIDToTypeID( "impliedBaselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( idimpliedBaselineShift, idpointsUnit, 0.000000 );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idmetricsKern = stringIDToTypeID( "metricsKern" );
    desc358.putEnumerated( idautoKern, idautoKern, idmetricsKern );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idnormal = stringIDToTypeID( "normal" );
    desc358.putEnumerated( idfontCaps, idfontCaps, idnormal );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddefaultDigits = stringIDToTypeID( "defaultDigits" );
    desc358.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidaDefault = stringIDToTypeID( "kashidaDefault" );
    desc358.putEnumerated( idkashidas, idkashidas, idkashidaDefault );
    var iddiacXOffset = stringIDToTypeID( "diacXOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( iddiacXOffset, idpointsUnit, 0.000000 );
    var iddiacYOffset = stringIDToTypeID( "diacYOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( iddiacYOffset, idpointsUnit, 0.000000 );
    var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc358.putUnitDouble( idmarkYDistFromBaseline, idpointsUnit, 50.000000 );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc358.putEnumerated( idbaseline, idbaseline, idnormal );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc358.putEnumerated( idotbaseline, idotbaseline, idnormal );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
    desc358.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderlineOff = stringIDToTypeID( "underlineOff" );
    desc358.putEnumerated( idunderline, idunderline, idunderlineOff );
    var idligature = stringIDToTypeID( "ligature" );
    desc358.putBoolean( idligature, true );
    var idaltligature = stringIDToTypeID( "altligature" );
    desc358.putBoolean( idaltligature, false );
    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
    desc358.putBoolean( idcontextualLigatures, false );
    var idfractions = stringIDToTypeID( "fractions" );
    desc358.putBoolean( idfractions, false );
    var idordinals = stringIDToTypeID( "ordinals" );
    desc358.putBoolean( idordinals, false );
    var idswash = stringIDToTypeID( "swash" );
    desc358.putBoolean( idswash, false );
    var idtitling = stringIDToTypeID( "titling" );
    desc358.putBoolean( idtitling, false );
    var idconnectionForms = stringIDToTypeID( "connectionForms" );
    desc358.putBoolean( idconnectionForms, false );
    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
    desc358.putBoolean( idstylisticAlternates, false );
    var idstylisticSets = stringIDToTypeID( "stylisticSets" );
    desc358.putInteger( idstylisticSets, 0 );
    var idornaments = stringIDToTypeID( "ornaments" );
    desc358.putBoolean( idornaments, false );
    var idjustificationAlternates = stringIDToTypeID( "justificationAlternates" );
    desc358.putBoolean( idjustificationAlternates, false );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idnormal = stringIDToTypeID( "normal" );
    desc358.putEnumerated( idfigureStyle, idfigureStyle, idnormal );
    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
    desc358.putBoolean( idproportionalMetrics, false );
    var idkana = stringIDToTypeID( "kana" );
    desc358.putBoolean( idkana, false );
    var iditalics = stringIDToTypeID( "italics" );
    desc358.putBoolean( iditalics, false );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idrotated = stringIDToTypeID( "rotated" );
    desc358.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
    desc358.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var iddefaultForm = stringIDToTypeID( "defaultForm" );
    desc358.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
    var idmojiZume = stringIDToTypeID( "mojiZume" );
    desc358.putDouble( idmojiZume, 0.000000 );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idroman = stringIDToTypeID( "roman" );
    desc358.putEnumerated( idgridAlignment, idgridAlignment, idroman );
    var idnoBreak = stringIDToTypeID( "noBreak" );
    desc358.putBoolean( idnoBreak, false );
    var idcolor = stringIDToTypeID( "color" );
    var desc359 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc359.putDouble( idred, 252.260697 );
    var idgrain = stringIDToTypeID( "grain" );
    desc359.putDouble( idgrain, 231.844362 );
    var idblue = stringIDToTypeID( "blue" );
    desc359.putDouble( idblue, 7.404669 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc358.putObject( idcolor, idRGBColor, desc359 );
    var idstrokeColor = stringIDToTypeID( "strokeColor" );
    var desc360 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc360.putDouble( idred, 0.000000 );
    var idgrain = stringIDToTypeID( "grain" );
    desc360.putDouble( idgrain, 0.000000 );
    var idblue = stringIDToTypeID( "blue" );
    desc360.putDouble( idblue, 0.000000 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc358.putObject( idstrokeColor, idRGBColor, desc360 );
    var idbaseParentStyle = stringIDToTypeID( "baseParentStyle" );
    var desc361 = new ActionDescriptor();
    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
    desc361.putString( idfontPostScriptName, "AdobeHeitiStd-Regular" );
    var idfontName = stringIDToTypeID( "fontName" );
    desc361.putString( idfontName, "Adobe Heiti Std" );
    var idfontStyleName = stringIDToTypeID( "fontStyleName" );
    desc361.putString( idfontStyleName, "R" );
    var idfontScript = stringIDToTypeID( "fontScript" );
    desc361.putInteger( idfontScript, 25 );
    var idfontTechnology = stringIDToTypeID( "fontTechnology" );
    desc361.putInteger( idfontTechnology, 2 );
    var idfontAvailable = stringIDToTypeID( "fontAvailable" );
    desc361.putBoolean( idfontAvailable, true );
    var idsize = stringIDToTypeID( "size" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idsize, idpointsUnit, 12.000000 );
    var idimpliedFontSize = stringIDToTypeID( "impliedFontSize" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idimpliedFontSize, idpointsUnit, 12.000000 );
    var idhorizontalScale = stringIDToTypeID( "horizontalScale" );
    desc361.putDouble( idhorizontalScale, 100.000000 );
    var idverticalScale = stringIDToTypeID( "verticalScale" );
    desc361.putDouble( idverticalScale, 100.000000 );
    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
    desc361.putBoolean( idsyntheticBold, false );
    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
    desc361.putBoolean( idsyntheticItalic, false );
    var idautoLeading = stringIDToTypeID( "autoLeading" );
    desc361.putBoolean( idautoLeading, true );
    var idtracking = stringIDToTypeID( "tracking" );
    desc361.putInteger( idtracking, 0 );
    var idbaselineShift = stringIDToTypeID( "baselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idbaselineShift, idpointsUnit, 0.000000 );
    var idimpliedBaselineShift = stringIDToTypeID( "impliedBaselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idimpliedBaselineShift, idpointsUnit, 0.000000 );
    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
    desc361.putDouble( idcharacterRotation, 0.000000 );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idmetricsKern = stringIDToTypeID( "metricsKern" );
    desc361.putEnumerated( idautoKern, idautoKern, idmetricsKern );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idnormal = stringIDToTypeID( "normal" );
    desc361.putEnumerated( idfontCaps, idfontCaps, idnormal );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddefaultDigits = stringIDToTypeID( "defaultDigits" );
    desc361.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );
    var iddirOverride = stringIDToTypeID( "dirOverride" );
    var iddirOverride = stringIDToTypeID( "dirOverride" );
    var iddirOverrideDefault = stringIDToTypeID( "dirOverrideDefault" );
    desc361.putEnumerated( iddirOverride, iddirOverride, iddirOverrideDefault );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidaDefault = stringIDToTypeID( "kashidaDefault" );
    desc361.putEnumerated( idkashidas, idkashidas, idkashidaDefault );
    var iddiacVPos = stringIDToTypeID( "diacVPos" );
    var iddiacVPos = stringIDToTypeID( "diacVPos" );
    var iddiacVPosOpenType = stringIDToTypeID( "diacVPosOpenType" );
    desc361.putEnumerated( iddiacVPos, iddiacVPos, iddiacVPosOpenType );
    var iddiacXOffset = stringIDToTypeID( "diacXOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( iddiacXOffset, idpointsUnit, 0.000000 );
    var iddiacYOffset = stringIDToTypeID( "diacYOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( iddiacYOffset, idpointsUnit, 0.000000 );
    var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idmarkYDistFromBaseline, idpointsUnit, 100.000000 );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc361.putEnumerated( idbaseline, idbaseline, idnormal );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc361.putEnumerated( idotbaseline, idotbaseline, idnormal );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
    desc361.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderlineOff = stringIDToTypeID( "underlineOff" );
    desc361.putEnumerated( idunderline, idunderline, idunderlineOff );
    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idunderlineOffset, idpointsUnit, 0.000000 );
    var idligature = stringIDToTypeID( "ligature" );
    desc361.putBoolean( idligature, true );
    var idaltligature = stringIDToTypeID( "altligature" );
    desc361.putBoolean( idaltligature, false );
    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
    desc361.putBoolean( idcontextualLigatures, false );
    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
    desc361.putBoolean( idalternateLigatures, false );
    var idoldStyle = stringIDToTypeID( "oldStyle" );
    desc361.putBoolean( idoldStyle, false );
    var idfractions = stringIDToTypeID( "fractions" );
    desc361.putBoolean( idfractions, false );
    var idordinals = stringIDToTypeID( "ordinals" );
    desc361.putBoolean( idordinals, false );
    var idswash = stringIDToTypeID( "swash" );
    desc361.putBoolean( idswash, false );
    var idtitling = stringIDToTypeID( "titling" );
    desc361.putBoolean( idtitling, false );
    var idconnectionForms = stringIDToTypeID( "connectionForms" );
    desc361.putBoolean( idconnectionForms, false );
    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
    desc361.putBoolean( idstylisticAlternates, false );
    var idstylisticSets = stringIDToTypeID( "stylisticSets" );
    desc361.putInteger( idstylisticSets, 0 );
    var idornaments = stringIDToTypeID( "ornaments" );
    desc361.putBoolean( idornaments, false );
    var idjustificationAlternates = stringIDToTypeID( "justificationAlternates" );
    desc361.putBoolean( idjustificationAlternates, false );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idnormal = stringIDToTypeID( "normal" );
    desc361.putEnumerated( idfigureStyle, idfigureStyle, idnormal );
    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
    desc361.putBoolean( idproportionalMetrics, false );
    var idkana = stringIDToTypeID( "kana" );
    desc361.putBoolean( idkana, false );
    var iditalics = stringIDToTypeID( "italics" );
    desc361.putBoolean( iditalics, false );
    var idruby = stringIDToTypeID( "ruby" );
    desc361.putBoolean( idruby, false );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idrotated = stringIDToTypeID( "rotated" );
    desc361.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
    desc361.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var iddefaultForm = stringIDToTypeID( "defaultForm" );
    desc361.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
    var idmojiZume = stringIDToTypeID( "mojiZume" );
    desc361.putDouble( idmojiZume, 0.000000 );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idroman = stringIDToTypeID( "roman" );
    desc361.putEnumerated( idgridAlignment, idgridAlignment, idroman );
    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
    desc361.putBoolean( idenableWariChu, false );
    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
    desc361.putInteger( idwariChuCount, 2 );
    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
    desc361.putInteger( idwariChuLineGap, 0 );
    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
    desc361.putDouble( idwariChuScale, 0.500000 );
    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
    desc361.putInteger( idwariChuWidow, 2 );
    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
    desc361.putInteger( idwariChuOrphan, 2 );
    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
    desc361.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
    desc361.putInteger( idtcyUpDown, 0 );
    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
    desc361.putInteger( idtcyLeftRight, 0 );
    var idleftAki = stringIDToTypeID( "leftAki" );
    desc361.putDouble( idleftAki, -1.000000 );
    var idrightAki = stringIDToTypeID( "rightAki" );
    desc361.putDouble( idrightAki, -1.000000 );
    var idjiDori = stringIDToTypeID( "jiDori" );
    desc361.putInteger( idjiDori, 0 );
    var idnoBreak = stringIDToTypeID( "noBreak" );
    desc361.putBoolean( idnoBreak, false );
    var idcolor = stringIDToTypeID( "color" );
    var desc362 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc362.putDouble( idred, 0.000000 );
    var idgrain = stringIDToTypeID( "grain" );
    desc362.putDouble( idgrain, 0.000000 );
    var idblue = stringIDToTypeID( "blue" );
    desc362.putDouble( idblue, 0.000000 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc361.putObject( idcolor, idRGBColor, desc362 );
    var idstrokeColor = stringIDToTypeID( "strokeColor" );
    var desc363 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc363.putDouble( idred, 0.000000 );
    var idgrain = stringIDToTypeID( "grain" );
    desc363.putDouble( idgrain, 0.000000 );
    var idblue = stringIDToTypeID( "blue" );
    desc363.putDouble( idblue, 0.000000 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc361.putObject( idstrokeColor, idRGBColor, desc363 );
    var idfill = stringIDToTypeID( "fill" );
    desc361.putBoolean( idfill, true );
    var idstroke = stringIDToTypeID( "stroke" );
    desc361.putBoolean( idstroke, false );
    var idfillFirst = stringIDToTypeID( "fillFirst" );
    desc361.putBoolean( idfillFirst, true );
    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
    desc361.putBoolean( idfillOverPrint, false );
    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
    desc361.putBoolean( idstrokeOverPrint, false );
    var idlineCap = stringIDToTypeID( "lineCap" );
    var idlineCap = stringIDToTypeID( "lineCap" );
    var idbuttCap = stringIDToTypeID( "buttCap" );
    desc361.putEnumerated( idlineCap, idlineCap, idbuttCap );
    var idlineJoin = stringIDToTypeID( "lineJoin" );
    var idlineJoin = stringIDToTypeID( "lineJoin" );
    var idmiterJoin = stringIDToTypeID( "miterJoin" );
    desc361.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
    var idlineWidth = stringIDToTypeID( "lineWidth" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idlineWidth, idpointsUnit, 1.000000 );
    var idmiterLimit = stringIDToTypeID( "miterLimit" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc361.putUnitDouble( idmiterLimit, idpointsUnit, 4.000000 );
    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
    desc361.putDouble( idlineDashoffset, 0.000000 );
    var idtextStyle = stringIDToTypeID( "textStyle" );
    desc358.putObject( idbaseParentStyle, idtextStyle, desc361 );
    var idtextStyle = stringIDToTypeID( "textStyle" );
    desc357.putObject( idtextStyle, idtextStyle, desc358 );
    var idtextStyleRange = stringIDToTypeID( "textStyleRange" );
    list90.putObject( idtextStyleRange, desc357 );
    desc350.putList( idtextStyleRange, list90 );
    var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
    var list91 = new ActionList();
    var desc364 = new ActionDescriptor();
    var idfrom = stringIDToTypeID( "from" );
    desc364.putInteger( idfrom, 0 );
    var idto = stringIDToTypeID( "to" );
    desc364.putInteger( idto, 2 );
    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
    var desc365 = new ActionDescriptor();
    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
    desc365.putBoolean( idstyleSheetHasParent, true );
    var idalign = stringIDToTypeID( "align" );
    var idalignmentType = stringIDToTypeID( "alignmentType" );
    var idleft = stringIDToTypeID( "left" );
    desc365.putEnumerated( idalign, idalignmentType, idleft );
    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idfirstLineIndent, idpointsUnit, 0.000000 );
    var idimpliedFirstLineIndent = stringIDToTypeID( "impliedFirstLineIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idimpliedFirstLineIndent, idpointsUnit, 0.000000 );
    var idstartIndent = stringIDToTypeID( "startIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idstartIndent, idpointsUnit, 0.000000 );
    var idimpliedStartIndent = stringIDToTypeID( "impliedStartIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idimpliedStartIndent, idpointsUnit, 0.000000 );
    var idendIndent = stringIDToTypeID( "endIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idendIndent, idpointsUnit, 0.000000 );
    var idimpliedEndIndent = stringIDToTypeID( "impliedEndIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idimpliedEndIndent, idpointsUnit, 0.000000 );
    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idspaceBefore, idpointsUnit, 0.000000 );
    var idimpliedSpaceBefore = stringIDToTypeID( "impliedSpaceBefore" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idimpliedSpaceBefore, idpointsUnit, 0.000000 );
    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idspaceAfter, idpointsUnit, 0.000000 );
    var idimpliedSpaceAfter = stringIDToTypeID( "impliedSpaceAfter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc365.putUnitDouble( idimpliedSpaceAfter, idpointsUnit, 0.000000 );
    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
    desc365.putDouble( idautoLeadingPercentage, 1.200000 );
    var idleadingType = stringIDToTypeID( "leadingType" );
    var idleadingType = stringIDToTypeID( "leadingType" );
    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
    desc365.putEnumerated( idleadingType, idleadingType, idleadingBelow );
    var iddirectionType = stringIDToTypeID( "directionType" );
    var iddirectionType = stringIDToTypeID( "directionType" );
    var iddirLeftToRight = stringIDToTypeID( "dirLeftToRight" );
    desc365.putEnumerated( iddirectionType, iddirectionType, iddirLeftToRight );
    var idkashidaWidthType = stringIDToTypeID( "kashidaWidthType" );
    var idkashidaWidthType = stringIDToTypeID( "kashidaWidthType" );
    var idkashidaWidthMedium = stringIDToTypeID( "kashidaWidthMedium" );
    desc365.putEnumerated( idkashidaWidthType, idkashidaWidthType, idkashidaWidthMedium );
    var idhyphenate = stringIDToTypeID( "hyphenate" );
    desc365.putBoolean( idhyphenate, false );
    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
    desc365.putDouble( idjustificationWordMinimum, 0.800000 );
    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
    desc365.putDouble( idjustificationWordDesired, 1.000000 );
    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
    desc365.putDouble( idjustificationWordMaximum, 1.330000 );
    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
    desc365.putDouble( idjustificationLetterMinimum, 0.000000 );
    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
    desc365.putDouble( idjustificationLetterDesired, 0.000000 );
    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
    desc365.putDouble( idjustificationLetterMaximum, 0.000000 );
    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
    desc365.putDouble( idjustificationGlyphMinimum, 1.000000 );
    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
    desc365.putDouble( idjustificationGlyphDesired, 1.000000 );
    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
    desc365.putDouble( idjustificationGlyphMaximum, 1.000000 );
    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
    desc365.putBoolean( idhangingRoman, false );
    var idburasagari = stringIDToTypeID( "burasagari" );
    var idburasagari = stringIDToTypeID( "burasagari" );
    var idburasagariStandard = stringIDToTypeID( "burasagariStandard" );
    desc365.putEnumerated( idburasagari, idburasagari, idburasagariStandard );
    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
    var idpushIn = stringIDToTypeID( "pushIn" );
    desc365.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
    desc365.putBoolean( idtextEveryLineComposer, true );
    var idtextComposerEngine = stringIDToTypeID( "textComposerEngine" );
    var idtextComposerEngine = stringIDToTypeID( "textComposerEngine" );
    var idtextLatinCJKComposer = stringIDToTypeID( "textLatinCJKComposer" );
    desc365.putEnumerated( idtextComposerEngine, idtextComposerEngine, idtextLatinCJKComposer );
    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
    desc364.putObject( idparagraphStyle, idparagraphStyle, desc365 );
    var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
    list91.putObject( idparagraphStyleRange, desc364 );
    desc350.putList( idparagraphStyleRange, list91 );
    var idkerningRange = stringIDToTypeID( "kerningRange" );
    var list92 = new ActionList();
    desc350.putList( idkerningRange, list92 );
    var idtextLayer = stringIDToTypeID( "textLayer" );
    desc349.putObject( idto, idtextLayer, desc350 );
    executeAction( idset, desc349, DialogModes.NO );

    // =======================================================
    var idduplicate = stringIDToTypeID( "duplicate" );
    var desc366 = new ActionDescriptor();
    var idnull = stringIDToTypeID( "null" );
    var ref61 = new ActionReference();
    var idlayer = stringIDToTypeID( "layer" );
    var idordinal = stringIDToTypeID( "ordinal" );
    var idtargetEnum = stringIDToTypeID( "targetEnum" );
    ref61.putEnumerated( idlayer, idordinal, idtargetEnum );
    desc366.putReference( idnull, ref61 );
    var idname = stringIDToTypeID( "name" );
    desc366.putString( idname,  ""+alies+""  );
    var idversion = stringIDToTypeID( "version" );
    desc366.putInteger( idversion, 5 );
    var idID = stringIDToTypeID( "ID" );
    var list93 = new ActionList();
    list93.putInteger( 9 );
    desc366.putList( idID, list93 );
    executeAction( idduplicate, desc366, DialogModes.NO );

    // =======================================================
    var idset = stringIDToTypeID( "set" );
    var desc367 = new ActionDescriptor();
    var idnull = stringIDToTypeID( "null" );
    var ref62 = new ActionReference();
    var idtextLayer = stringIDToTypeID( "textLayer" );
    var idordinal = stringIDToTypeID( "ordinal" );
    var idtargetEnum = stringIDToTypeID( "targetEnum" );
    ref62.putEnumerated( idtextLayer, idordinal, idtargetEnum );
    desc367.putReference( idnull, ref62 );
    var idto = stringIDToTypeID( "to" );
    var desc368 = new ActionDescriptor();
    var idtextKey = stringIDToTypeID( "textKey" );
    desc368.putString( idtextKey,""+char1);
    var idwarp = stringIDToTypeID( "warp" );
    var desc369 = new ActionDescriptor();
    var idwarpStyle = stringIDToTypeID( "warpStyle" );
    var idwarpStyle = stringIDToTypeID( "warpStyle" );
    var idwarpNone = stringIDToTypeID( "warpNone" );
    desc369.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
    var idwarpValue = stringIDToTypeID( "warpValue" );
    desc369.putDouble( idwarpValue, 0.000000 );
    var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
    desc369.putDouble( idwarpPerspective, 0.000000 );
    var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
    desc369.putDouble( idwarpPerspectiveOther, 0.000000 );
    var idwarpRotate = stringIDToTypeID( "warpRotate" );
    var idorientation = stringIDToTypeID( "orientation" );
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc369.putEnumerated( idwarpRotate, idorientation, idhorizontal );
    var idwarp = stringIDToTypeID( "warp" );
    desc368.putObject( idwarp, idwarp, desc369 );
    var idtextGridding = stringIDToTypeID( "textGridding" );
    var idtextGridding = stringIDToTypeID( "textGridding" );
    var idnone = stringIDToTypeID( "none" );
    desc368.putEnumerated( idtextGridding, idtextGridding, idnone );
    var idorientation = stringIDToTypeID( "orientation" );
    var idorientation = stringIDToTypeID( "orientation" );
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc368.putEnumerated( idorientation, idorientation, idhorizontal );
    var idantiAlias = stringIDToTypeID( "antiAlias" );
    var idantiAliasType = stringIDToTypeID( "antiAliasType" );
    var idantiAliasSmooth = stringIDToTypeID( "antiAliasSmooth" );
    desc368.putEnumerated( idantiAlias, idantiAliasType, idantiAliasSmooth );
    var idbounds = stringIDToTypeID( "bounds" );
    var desc370 = new ActionDescriptor();
    var idleft = stringIDToTypeID( "left" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc370.putUnitDouble( idleft, idpointsUnit, 0.000000 );
    var idtop = stringIDToTypeID( "top" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc370.putUnitDouble( idtop, idpointsUnit, -204.929352 );
    var idright = stringIDToTypeID( "right" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc370.putUnitDouble( idright, idpointsUnit, 177.099197 );
    var idbottom = stringIDToTypeID( "bottom" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc370.putUnitDouble( idbottom, idpointsUnit, 37.948448 );
    var idbounds = stringIDToTypeID( "bounds" );
    desc368.putObject( idbounds, idbounds, desc370 );
    var idboundingBox = stringIDToTypeID( "boundingBox" );
    var desc371 = new ActionDescriptor();
    var idleft = stringIDToTypeID( "left" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc371.putUnitDouble( idleft, idpointsUnit, 22.263855 );
    var idtop = stringIDToTypeID( "top" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc371.putUnitDouble( idtop, idpointsUnit, -169.761902 );
    var idright = stringIDToTypeID( "right" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc371.putUnitDouble( idright, idpointsUnit, 150.534027 );
    var idbottom = stringIDToTypeID( "bottom" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc371.putUnitDouble( idbottom, idpointsUnit, 1.011993 );
    var idboundingBox = stringIDToTypeID( "boundingBox" );
    desc368.putObject( idboundingBox, idboundingBox, desc371 );
    var idtextShape = stringIDToTypeID( "textShape" );
    var list94 = new ActionList();
    var desc372 = new ActionDescriptor();
    var idchar = stringIDToTypeID( "char" );
    var idchar = stringIDToTypeID( "char" );
    var idpaint = stringIDToTypeID( "paint" );
    desc372.putEnumerated( idchar, idchar, idpaint );
    var idorientation = stringIDToTypeID( "orientation" );
    var idorientation = stringIDToTypeID( "orientation" );
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc372.putEnumerated( idorientation, idorientation, idhorizontal );
    var idtransform = stringIDToTypeID( "transform" );
    var desc373 = new ActionDescriptor();
    var idxx = stringIDToTypeID( "xx" );
    desc373.putDouble( idxx, 1.000000 );
    var idxy = stringIDToTypeID( "xy" );
    desc373.putDouble( idxy, 0.000000 );
    var idyx = stringIDToTypeID( "yx" );
    desc373.putDouble( idyx, 0.000000 );
    var idyy = stringIDToTypeID( "yy" );
    desc373.putDouble( idyy, 1.000000 );
    var idtx = stringIDToTypeID( "tx" );
    desc373.putDouble( idtx, 0.000000 );
    var idty = stringIDToTypeID( "ty" );
    desc373.putDouble( idty, 0.000000 );
    var idtransform = stringIDToTypeID( "transform" );
    desc372.putObject( idtransform, idtransform, desc373 );
    var idrowCount = stringIDToTypeID( "rowCount" );
    desc372.putInteger( idrowCount, 1 );
    var idcolumnCount = stringIDToTypeID( "columnCount" );
    desc372.putInteger( idcolumnCount, 1 );
    var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
    desc372.putBoolean( idrowMajorOrder, true );
    var idrowGutter = stringIDToTypeID( "rowGutter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc372.putUnitDouble( idrowGutter, idpointsUnit, 0.000000 );
    var idcolumnGutter = stringIDToTypeID( "columnGutter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc372.putUnitDouble( idcolumnGutter, idpointsUnit, 0.000000 );
    var idspacing = stringIDToTypeID( "spacing" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc372.putUnitDouble( idspacing, idpointsUnit, 0.000000 );
    var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
    var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
    var idalignByAscent = stringIDToTypeID( "alignByAscent" );
    desc372.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
    var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc372.putUnitDouble( idfirstBaselineMinimum, idpointsUnit, 0.000000 );
    var idbase = stringIDToTypeID( "base" );
    var desc374 = new ActionDescriptor();
    var idhorizontal = stringIDToTypeID( "horizontal" );
    desc374.putDouble( idhorizontal, 0.000000 );
    var idvertical = stringIDToTypeID( "vertical" );
    desc374.putDouble( idvertical, 0.000000 );
    var idpaint = stringIDToTypeID( "paint" );
    desc372.putObject( idbase, idpaint, desc374 );
    var idtextShape = stringIDToTypeID( "textShape" );
    list94.putObject( idtextShape, desc372 );
    desc368.putList( idtextShape, list94 );
    var idtextStyleRange = stringIDToTypeID( "textStyleRange" );
    var list95 = new ActionList();
    var desc375 = new ActionDescriptor();
    var idfrom = stringIDToTypeID( "from" );
    desc375.putInteger( idfrom, 0 );
    var idto = stringIDToTypeID( "to" );
    desc375.putInteger( idto, 2 );
    var idtextStyle = stringIDToTypeID( "textStyle" );
    var desc376 = new ActionDescriptor();
    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
    desc376.putBoolean( idstyleSheetHasParent, true );
    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
    desc376.putString( idfontPostScriptName, "DFWaWaSC-W5" );
    var idfontName = stringIDToTypeID( "fontName" );
    desc376.putString( idfontName, "Wawati SC" );
    var idfontStyleName = stringIDToTypeID( "fontStyleName" );
    desc376.putString( idfontStyleName, "Regular" );
    var idfontScript = stringIDToTypeID( "fontScript" );
    desc376.putInteger( idfontScript, 25 );
    var idfontTechnology = stringIDToTypeID( "fontTechnology" );
    desc376.putInteger( idfontTechnology, 2 );
    var idfontAvailable = stringIDToTypeID( "fontAvailable" );
    desc376.putBoolean( idfontAvailable, true );
    var idsize = stringIDToTypeID( "size" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( idsize, idpointsUnit, 252.999954 );
    var idimpliedFontSize = stringIDToTypeID( "impliedFontSize" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( idimpliedFontSize, idpointsUnit, 252.999954 );
    var idhorizontalScale = stringIDToTypeID( "horizontalScale" );
    desc376.putDouble( idhorizontalScale, 100.000000 );
    var idverticalScale = stringIDToTypeID( "verticalScale" );
    desc376.putDouble( idverticalScale, 100.000000 );
    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
    desc376.putBoolean( idsyntheticBold, false );
    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
    desc376.putBoolean( idsyntheticItalic, false );
    var idautoLeading = stringIDToTypeID( "autoLeading" );
    desc376.putBoolean( idautoLeading, true );
    var idtracking = stringIDToTypeID( "tracking" );
    desc376.putInteger( idtracking, 0 );
    var idbaselineShift = stringIDToTypeID( "baselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( idbaselineShift, idpointsUnit, 0.000000 );
    var idimpliedBaselineShift = stringIDToTypeID( "impliedBaselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( idimpliedBaselineShift, idpointsUnit, 0.000000 );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idmetricsKern = stringIDToTypeID( "metricsKern" );
    desc376.putEnumerated( idautoKern, idautoKern, idmetricsKern );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idnormal = stringIDToTypeID( "normal" );
    desc376.putEnumerated( idfontCaps, idfontCaps, idnormal );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddefaultDigits = stringIDToTypeID( "defaultDigits" );
    desc376.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidaDefault = stringIDToTypeID( "kashidaDefault" );
    desc376.putEnumerated( idkashidas, idkashidas, idkashidaDefault );
    var iddiacXOffset = stringIDToTypeID( "diacXOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( iddiacXOffset, idpointsUnit, 0.000000 );
    var iddiacYOffset = stringIDToTypeID( "diacYOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( iddiacYOffset, idpointsUnit, 0.000000 );
    var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc376.putUnitDouble( idmarkYDistFromBaseline, idpointsUnit, 50.000000 );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc376.putEnumerated( idbaseline, idbaseline, idnormal );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc376.putEnumerated( idotbaseline, idotbaseline, idnormal );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
    desc376.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderlineOff = stringIDToTypeID( "underlineOff" );
    desc376.putEnumerated( idunderline, idunderline, idunderlineOff );
    var idligature = stringIDToTypeID( "ligature" );
    desc376.putBoolean( idligature, true );
    var idaltligature = stringIDToTypeID( "altligature" );
    desc376.putBoolean( idaltligature, false );
    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
    desc376.putBoolean( idcontextualLigatures, false );
    var idfractions = stringIDToTypeID( "fractions" );
    desc376.putBoolean( idfractions, false );
    var idordinals = stringIDToTypeID( "ordinals" );
    desc376.putBoolean( idordinals, false );
    var idswash = stringIDToTypeID( "swash" );
    desc376.putBoolean( idswash, false );
    var idtitling = stringIDToTypeID( "titling" );
    desc376.putBoolean( idtitling, false );
    var idconnectionForms = stringIDToTypeID( "connectionForms" );
    desc376.putBoolean( idconnectionForms, false );
    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
    desc376.putBoolean( idstylisticAlternates, false );
    var idstylisticSets = stringIDToTypeID( "stylisticSets" );
    desc376.putInteger( idstylisticSets, 0 );
    var idornaments = stringIDToTypeID( "ornaments" );
    desc376.putBoolean( idornaments, false );
    var idjustificationAlternates = stringIDToTypeID( "justificationAlternates" );
    desc376.putBoolean( idjustificationAlternates, false );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idnormal = stringIDToTypeID( "normal" );
    desc376.putEnumerated( idfigureStyle, idfigureStyle, idnormal );
    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
    desc376.putBoolean( idproportionalMetrics, false );
    var idkana = stringIDToTypeID( "kana" );
    desc376.putBoolean( idkana, false );
    var iditalics = stringIDToTypeID( "italics" );
    desc376.putBoolean( iditalics, false );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idrotated = stringIDToTypeID( "rotated" );
    desc376.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
    desc376.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var iddefaultForm = stringIDToTypeID( "defaultForm" );
    desc376.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
    var idmojiZume = stringIDToTypeID( "mojiZume" );
    desc376.putDouble( idmojiZume, 0.000000 );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idroman = stringIDToTypeID( "roman" );
    desc376.putEnumerated( idgridAlignment, idgridAlignment, idroman );
    var idnoBreak = stringIDToTypeID( "noBreak" );
    desc376.putBoolean( idnoBreak, false );
    var idcolor = stringIDToTypeID( "color" );
    var desc377 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc377.putDouble( idred, 252.260697 );
    var idgrain = stringIDToTypeID( "grain" );
    desc377.putDouble( idgrain, 231.844362 );
    var idblue = stringIDToTypeID( "blue" );
    desc377.putDouble( idblue, 7.404669 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc376.putObject( idcolor, idRGBColor, desc377 );
    var idstrokeColor = stringIDToTypeID( "strokeColor" );
    var desc378 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc378.putDouble( idred, 0.000000 );
    var idgrain = stringIDToTypeID( "grain" );
    desc378.putDouble( idgrain, 0.000000 );
    var idblue = stringIDToTypeID( "blue" );
    desc378.putDouble( idblue, 0.000000 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc376.putObject( idstrokeColor, idRGBColor, desc378 );
    var idbaseParentStyle = stringIDToTypeID( "baseParentStyle" );
    var desc379 = new ActionDescriptor();
    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
    desc379.putString( idfontPostScriptName, "AdobeHeitiStd-Regular" );
    var idfontName = stringIDToTypeID( "fontName" );
    desc379.putString( idfontName, "Adobe Heiti Std" );
    var idfontStyleName = stringIDToTypeID( "fontStyleName" );
    desc379.putString( idfontStyleName, "R" );
    var idfontScript = stringIDToTypeID( "fontScript" );
    desc379.putInteger( idfontScript, 25 );
    var idfontTechnology = stringIDToTypeID( "fontTechnology" );
    desc379.putInteger( idfontTechnology, 2 );
    var idfontAvailable = stringIDToTypeID( "fontAvailable" );
    desc379.putBoolean( idfontAvailable, true );
    var idsize = stringIDToTypeID( "size" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idsize, idpointsUnit, 12.000000 );
    var idimpliedFontSize = stringIDToTypeID( "impliedFontSize" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idimpliedFontSize, idpointsUnit, 12.000000 );
    var idhorizontalScale = stringIDToTypeID( "horizontalScale" );
    desc379.putDouble( idhorizontalScale, 100.000000 );
    var idverticalScale = stringIDToTypeID( "verticalScale" );
    desc379.putDouble( idverticalScale, 100.000000 );
    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
    desc379.putBoolean( idsyntheticBold, false );
    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
    desc379.putBoolean( idsyntheticItalic, false );
    var idautoLeading = stringIDToTypeID( "autoLeading" );
    desc379.putBoolean( idautoLeading, true );
    var idtracking = stringIDToTypeID( "tracking" );
    desc379.putInteger( idtracking, 0 );
    var idbaselineShift = stringIDToTypeID( "baselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idbaselineShift, idpointsUnit, 0.000000 );
    var idimpliedBaselineShift = stringIDToTypeID( "impliedBaselineShift" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idimpliedBaselineShift, idpointsUnit, 0.000000 );
    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
    desc379.putDouble( idcharacterRotation, 0.000000 );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idautoKern = stringIDToTypeID( "autoKern" );
    var idmetricsKern = stringIDToTypeID( "metricsKern" );
    desc379.putEnumerated( idautoKern, idautoKern, idmetricsKern );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idfontCaps = stringIDToTypeID( "fontCaps" );
    var idnormal = stringIDToTypeID( "normal" );
    desc379.putEnumerated( idfontCaps, idfontCaps, idnormal );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddigitSet = stringIDToTypeID( "digitSet" );
    var iddefaultDigits = stringIDToTypeID( "defaultDigits" );
    desc379.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );
    var iddirOverride = stringIDToTypeID( "dirOverride" );
    var iddirOverride = stringIDToTypeID( "dirOverride" );
    var iddirOverrideDefault = stringIDToTypeID( "dirOverrideDefault" );
    desc379.putEnumerated( iddirOverride, iddirOverride, iddirOverrideDefault );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidas = stringIDToTypeID( "kashidas" );
    var idkashidaDefault = stringIDToTypeID( "kashidaDefault" );
    desc379.putEnumerated( idkashidas, idkashidas, idkashidaDefault );
    var iddiacVPos = stringIDToTypeID( "diacVPos" );
    var iddiacVPos = stringIDToTypeID( "diacVPos" );
    var iddiacVPosOpenType = stringIDToTypeID( "diacVPosOpenType" );
    desc379.putEnumerated( iddiacVPos, iddiacVPos, iddiacVPosOpenType );
    var iddiacXOffset = stringIDToTypeID( "diacXOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( iddiacXOffset, idpointsUnit, 0.000000 );
    var iddiacYOffset = stringIDToTypeID( "diacYOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( iddiacYOffset, idpointsUnit, 0.000000 );
    var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idmarkYDistFromBaseline, idpointsUnit, 100.000000 );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idbaseline = stringIDToTypeID( "baseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc379.putEnumerated( idbaseline, idbaseline, idnormal );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idotbaseline = stringIDToTypeID( "otbaseline" );
    var idnormal = stringIDToTypeID( "normal" );
    desc379.putEnumerated( idotbaseline, idotbaseline, idnormal );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethrough = stringIDToTypeID( "strikethrough" );
    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
    desc379.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderline = stringIDToTypeID( "underline" );
    var idunderlineOff = stringIDToTypeID( "underlineOff" );
    desc379.putEnumerated( idunderline, idunderline, idunderlineOff );
    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idunderlineOffset, idpointsUnit, 0.000000 );
    var idligature = stringIDToTypeID( "ligature" );
    desc379.putBoolean( idligature, true );
    var idaltligature = stringIDToTypeID( "altligature" );
    desc379.putBoolean( idaltligature, false );
    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
    desc379.putBoolean( idcontextualLigatures, false );
    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
    desc379.putBoolean( idalternateLigatures, false );
    var idoldStyle = stringIDToTypeID( "oldStyle" );
    desc379.putBoolean( idoldStyle, false );
    var idfractions = stringIDToTypeID( "fractions" );
    desc379.putBoolean( idfractions, false );
    var idordinals = stringIDToTypeID( "ordinals" );
    desc379.putBoolean( idordinals, false );
    var idswash = stringIDToTypeID( "swash" );
    desc379.putBoolean( idswash, false );
    var idtitling = stringIDToTypeID( "titling" );
    desc379.putBoolean( idtitling, false );
    var idconnectionForms = stringIDToTypeID( "connectionForms" );
    desc379.putBoolean( idconnectionForms, false );
    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
    desc379.putBoolean( idstylisticAlternates, false );
    var idstylisticSets = stringIDToTypeID( "stylisticSets" );
    desc379.putInteger( idstylisticSets, 0 );
    var idornaments = stringIDToTypeID( "ornaments" );
    desc379.putBoolean( idornaments, false );
    var idjustificationAlternates = stringIDToTypeID( "justificationAlternates" );
    desc379.putBoolean( idjustificationAlternates, false );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idfigureStyle = stringIDToTypeID( "figureStyle" );
    var idnormal = stringIDToTypeID( "normal" );
    desc379.putEnumerated( idfigureStyle, idfigureStyle, idnormal );
    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
    desc379.putBoolean( idproportionalMetrics, false );
    var idkana = stringIDToTypeID( "kana" );
    desc379.putBoolean( idkana, false );
    var iditalics = stringIDToTypeID( "italics" );
    desc379.putBoolean( iditalics, false );
    var idruby = stringIDToTypeID( "ruby" );
    desc379.putBoolean( idruby, false );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
    var idrotated = stringIDToTypeID( "rotated" );
    desc379.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idtextLanguage = stringIDToTypeID( "textLanguage" );
    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
    desc379.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
    var iddefaultForm = stringIDToTypeID( "defaultForm" );
    desc379.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
    var idmojiZume = stringIDToTypeID( "mojiZume" );
    desc379.putDouble( idmojiZume, 0.000000 );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
    var idroman = stringIDToTypeID( "roman" );
    desc379.putEnumerated( idgridAlignment, idgridAlignment, idroman );
    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
    desc379.putBoolean( idenableWariChu, false );
    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
    desc379.putInteger( idwariChuCount, 2 );
    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
    desc379.putInteger( idwariChuLineGap, 0 );
    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
    desc379.putDouble( idwariChuScale, 0.500000 );
    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
    desc379.putInteger( idwariChuWidow, 2 );
    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
    desc379.putInteger( idwariChuOrphan, 2 );
    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
    desc379.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
    desc379.putInteger( idtcyUpDown, 0 );
    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
    desc379.putInteger( idtcyLeftRight, 0 );
    var idleftAki = stringIDToTypeID( "leftAki" );
    desc379.putDouble( idleftAki, -1.000000 );
    var idrightAki = stringIDToTypeID( "rightAki" );
    desc379.putDouble( idrightAki, -1.000000 );
    var idjiDori = stringIDToTypeID( "jiDori" );
    desc379.putInteger( idjiDori, 0 );
    var idnoBreak = stringIDToTypeID( "noBreak" );
    desc379.putBoolean( idnoBreak, false );
    var idcolor = stringIDToTypeID( "color" );
    var desc380 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc380.putDouble( idred, 0.000000 );
    var idgrain = stringIDToTypeID( "grain" );
    desc380.putDouble( idgrain, 0.000000 );
    var idblue = stringIDToTypeID( "blue" );
    desc380.putDouble( idblue, 0.000000 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc379.putObject( idcolor, idRGBColor, desc380 );
    var idstrokeColor = stringIDToTypeID( "strokeColor" );
    var desc381 = new ActionDescriptor();
    var idred = stringIDToTypeID( "red" );
    desc381.putDouble( idred, 0.000000 );
    var idgrain = stringIDToTypeID( "grain" );
    desc381.putDouble( idgrain, 0.000000 );
    var idblue = stringIDToTypeID( "blue" );
    desc381.putDouble( idblue, 0.000000 );
    var idRGBColor = stringIDToTypeID( "RGBColor" );
    desc379.putObject( idstrokeColor, idRGBColor, desc381 );
    var idfill = stringIDToTypeID( "fill" );
    desc379.putBoolean( idfill, true );
    var idstroke = stringIDToTypeID( "stroke" );
    desc379.putBoolean( idstroke, false );
    var idfillFirst = stringIDToTypeID( "fillFirst" );
    desc379.putBoolean( idfillFirst, true );
    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
    desc379.putBoolean( idfillOverPrint, false );
    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
    desc379.putBoolean( idstrokeOverPrint, false );
    var idlineCap = stringIDToTypeID( "lineCap" );
    var idlineCap = stringIDToTypeID( "lineCap" );
    var idbuttCap = stringIDToTypeID( "buttCap" );
    desc379.putEnumerated( idlineCap, idlineCap, idbuttCap );
    var idlineJoin = stringIDToTypeID( "lineJoin" );
    var idlineJoin = stringIDToTypeID( "lineJoin" );
    var idmiterJoin = stringIDToTypeID( "miterJoin" );
    desc379.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
    var idlineWidth = stringIDToTypeID( "lineWidth" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idlineWidth, idpointsUnit, 1.000000 );
    var idmiterLimit = stringIDToTypeID( "miterLimit" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc379.putUnitDouble( idmiterLimit, idpointsUnit, 4.000000 );
    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
    desc379.putDouble( idlineDashoffset, 0.000000 );
    var idtextStyle = stringIDToTypeID( "textStyle" );
    desc376.putObject( idbaseParentStyle, idtextStyle, desc379 );
    var idtextStyle = stringIDToTypeID( "textStyle" );
    desc375.putObject( idtextStyle, idtextStyle, desc376 );
    var idtextStyleRange = stringIDToTypeID( "textStyleRange" );
    list95.putObject( idtextStyleRange, desc375 );
    desc368.putList( idtextStyleRange, list95 );
    var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
    var list96 = new ActionList();
    var desc382 = new ActionDescriptor();
    var idfrom = stringIDToTypeID( "from" );
    desc382.putInteger( idfrom, 0 );
    var idto = stringIDToTypeID( "to" );
    desc382.putInteger( idto, 2 );
    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
    var desc383 = new ActionDescriptor();
    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
    desc383.putBoolean( idstyleSheetHasParent, true );
    var idalign = stringIDToTypeID( "align" );
    var idalignmentType = stringIDToTypeID( "alignmentType" );
    var idleft = stringIDToTypeID( "left" );
    desc383.putEnumerated( idalign, idalignmentType, idleft );
    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idfirstLineIndent, idpointsUnit, 0.000000 );
    var idimpliedFirstLineIndent = stringIDToTypeID( "impliedFirstLineIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idimpliedFirstLineIndent, idpointsUnit, 0.000000 );
    var idstartIndent = stringIDToTypeID( "startIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idstartIndent, idpointsUnit, 0.000000 );
    var idimpliedStartIndent = stringIDToTypeID( "impliedStartIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idimpliedStartIndent, idpointsUnit, 0.000000 );
    var idendIndent = stringIDToTypeID( "endIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idendIndent, idpointsUnit, 0.000000 );
    var idimpliedEndIndent = stringIDToTypeID( "impliedEndIndent" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idimpliedEndIndent, idpointsUnit, 0.000000 );
    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idspaceBefore, idpointsUnit, 0.000000 );
    var idimpliedSpaceBefore = stringIDToTypeID( "impliedSpaceBefore" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idimpliedSpaceBefore, idpointsUnit, 0.000000 );
    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idspaceAfter, idpointsUnit, 0.000000 );
    var idimpliedSpaceAfter = stringIDToTypeID( "impliedSpaceAfter" );
    var idpointsUnit = stringIDToTypeID( "pointsUnit" );
    desc383.putUnitDouble( idimpliedSpaceAfter, idpointsUnit, 0.000000 );
    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
    desc383.putDouble( idautoLeadingPercentage, 1.200000 );
    var idleadingType = stringIDToTypeID( "leadingType" );
    var idleadingType = stringIDToTypeID( "leadingType" );
    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
    desc383.putEnumerated( idleadingType, idleadingType, idleadingBelow );
    var iddirectionType = stringIDToTypeID( "directionType" );
    var iddirectionType = stringIDToTypeID( "directionType" );
    var iddirLeftToRight = stringIDToTypeID( "dirLeftToRight" );
    desc383.putEnumerated( iddirectionType, iddirectionType, iddirLeftToRight );
    var idkashidaWidthType = stringIDToTypeID( "kashidaWidthType" );
    var idkashidaWidthType = stringIDToTypeID( "kashidaWidthType" );
    var idkashidaWidthMedium = stringIDToTypeID( "kashidaWidthMedium" );
    desc383.putEnumerated( idkashidaWidthType, idkashidaWidthType, idkashidaWidthMedium );
    var idhyphenate = stringIDToTypeID( "hyphenate" );
    desc383.putBoolean( idhyphenate, false );
    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
    desc383.putDouble( idjustificationWordMinimum, 0.800000 );
    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
    desc383.putDouble( idjustificationWordDesired, 1.000000 );
    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
    desc383.putDouble( idjustificationWordMaximum, 1.330000 );
    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
    desc383.putDouble( idjustificationLetterMinimum, 0.000000 );
    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
    desc383.putDouble( idjustificationLetterDesired, 0.000000 );
    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
    desc383.putDouble( idjustificationLetterMaximum, 0.000000 );
    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
    desc383.putDouble( idjustificationGlyphMinimum, 1.000000 );
    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
    desc383.putDouble( idjustificationGlyphDesired, 1.000000 );
    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
    desc383.putDouble( idjustificationGlyphMaximum, 1.000000 );
    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
    desc383.putBoolean( idhangingRoman, false );
    var idburasagari = stringIDToTypeID( "burasagari" );
    var idburasagari = stringIDToTypeID( "burasagari" );
    var idburasagariStandard = stringIDToTypeID( "burasagariStandard" );
    desc383.putEnumerated( idburasagari, idburasagari, idburasagariStandard );
    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
    var idpushIn = stringIDToTypeID( "pushIn" );
    desc383.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
    desc383.putBoolean( idtextEveryLineComposer, true );
    var idtextComposerEngine = stringIDToTypeID( "textComposerEngine" );
    var idtextComposerEngine = stringIDToTypeID( "textComposerEngine" );
    var idtextLatinCJKComposer = stringIDToTypeID( "textLatinCJKComposer" );
    desc383.putEnumerated( idtextComposerEngine, idtextComposerEngine, idtextLatinCJKComposer );
    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
    desc382.putObject( idparagraphStyle, idparagraphStyle, desc383 );
    var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
    list96.putObject( idparagraphStyleRange, desc382 );
    desc368.putList( idparagraphStyleRange, list96 );
    var idkerningRange = stringIDToTypeID( "kerningRange" );
    var list97 = new ActionList();
    desc368.putList( idkerningRange, list97 );
    var idtextLayer = stringIDToTypeID( "textLayer" );
    desc367.putObject( idto, idtextLayer, desc368 );
    executeAction( idset, desc367, DialogModes.NO );

    // =======================================================
    var idselectNoLayers = stringIDToTypeID( "selectNoLayers" );
    var desc384 = new ActionDescriptor();
    var idnull = stringIDToTypeID( "null" );
    var ref63 = new ActionReference();
    var idlayer = stringIDToTypeID( "layer" );
    var idordinal = stringIDToTypeID( "ordinal" );
    var idtargetEnum = stringIDToTypeID( "targetEnum" );
    ref63.putEnumerated( idlayer, idordinal, idtargetEnum );
    desc384.putReference( idnull, ref63 );
    executeAction( idselectNoLayers, desc384, DialogModes.NO );

};
var all = "$%,.0123456789KMBT";
for(var index =0; index< all.length;index++){
    var ch = all[index]
    switch (ch) {
        case ".":
            var alies = "Period"
            break;
        case "?":
            alies = "Question"
            break;
        case "\\":
            alies = "Backslash"
            break;
        case "/":
            alies = "Slash"
            break;
        case ":":
            alies = "Colon"
            break;
        case "*":
            alies = "Star"
            break;
        case "\"":
            alies = "Quotation"
            break;
        case "<":
            alies = "Head"
            break;
        case ">":
            alies = "Trail"
            break;
        case "!":
            alies = "Surprise"
            break;
        case "|":
            alies = "Gang"
            break;
        default:
            alies = ch
    }
    copy(ch, alies);
}